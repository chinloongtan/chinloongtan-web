{"pageProps":{"post":{"content":"\nUsing `Animated` to animate components in `react-native` has been the my go to way of doing things for the past few years.\n\nUntil recently when I discovered that `LayoutAnimation` can achieve similar result in animating component without the hassle of managing the states of the animation.\n\nIn this case, I am trying to animate the `TextInput` of a chat screen, to expand and collapse accordingly when the input starts receiving text, or when it's been cleared.\n\n<!-- Below is the comparison: -->\n\n<!-- <img src=\"./layoutAnimation-before.gif\" width=\"384\" height=\"868\"/>\n<img src=\"./layoutAnimation-after.gif\" width=\"384\" height=\"868\"/> -->\n\nAll I did was adding this magical line before setting the `props/state` that responsible for expanding or collapsing the view.\n\n```\nLayoutAnimation.configureNext(LayoutAnimation.Presets.easeInEaseOut);\n```\n\nThis also works great with views with accordions and toggles.\n\nIt is possible to get it work with `Animated` but now that this is way much simpler, I think its worth sharing.\n\nFor more of the detail of using it, check out the official documentation for `LayoutAnimation`.\n","frontmatter":{"path":"/blog/layout-animation-in-a-nutshell","date":"2021-01-14T21:50:00.000Z","title":"LayoutAnimation in a nutshell","excerpt":"Simple and powerfull, even for complicated layouts","tags":["react-native"]},"fullPath":"/Users/chinloong/makespace/chinloongtan-web/src/content/blog/2021/01/14-layout-animation-in-a-nutshell/index.md","timeToRead":1}},"__N_SSG":true}