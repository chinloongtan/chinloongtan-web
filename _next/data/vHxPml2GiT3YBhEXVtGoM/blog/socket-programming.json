{"pageProps":{"post":{"content":"\nAbout 3 months ago, I am looking to build an app as a side project to explore different type of application that can be built with React Native.\n\nAfter a quick round of idea selection, I decided to build a [file transfer app](https://play.google.com/store/apps/details?id=app.mvphub.filelinkup). Part of the consideration being it scratches my own itch as I regularly transfer files between my Android and iOS devices.\n\n#### 1. Requirements\n\nApp should works\n\n- Offline\n- Send original file without compression / loss of quality\n\n#### 2. Journey\n\nInitial attempt was to use bluetooth to achieve that. Since wearables and devices connect and sync data from each other as I experienced it.\nPlus back in the days before cloud solutions, bluetooth file sharing was working okay.\n\nBluetooth technology quickly confuses me it's variation like bluetooth vs. bluetooth low energy (BLE), scanning and connecting devices are a big hurdle before getting into transmitting data between devices.\n\nThen, I am looking for feasible alternative and arrived at a WiFi network approach with TCP socket.\nI am familiar with the paradigm with my experiences working with chat and video streaming applications.\n\nA quick test of the setup with TCP server and client proofs that connecting devices are easier, and sending text data was achieved shortly after.\n\n-_Part 1 end_-\n","frontmatter":{"path":"/blog/socket-programming","date":"2023-11-08T09:30:00.000Z","title":"Socket programming","excerpt":"File transfer application","tags":["react-native","node.js"]},"fullPath":"/Users/chinloong/makespace/chinloongtan-web/src/content/blog/2023/11/08-socket-programming/index.md","timeToRead":1}},"__N_SSG":true}