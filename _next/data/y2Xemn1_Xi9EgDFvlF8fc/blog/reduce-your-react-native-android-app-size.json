{"pageProps":{"post":{"content":"\nOne of the many things that bother me after my React Native app went public is the app size.\n\nBig app size is not a show stopper to continue adding new features to my app, nor it causes anything bad.\n\nSo, it has always been the least priority to work on that.\n\nSome say it costs a bit of performance, if the app size is too big.\n\nHowever, it isn't really critical for any newly launched app for a premature optimization, on the app size.\n\nI've always wanted to fix it (when I have the time), and I think now is the best time, because I can do it for\n\nmultiple projects that I am juggling, with the same optimization trick.\n\nAnd, it's really simple.\n\nNOTE: This is an Android only optimization.\n\n###### Before\n\n![before](before.png)\n\n<br />\n\n###### After\n\n![after](after.png)\n\n<br />\n\nYou can do it with any *ONE* of two ways below:\n\n#### 1. Android app bundle\n\nSimply change your build process from\n\n`./gradlew assembleRelease`\n\nto\n\n`./gradlew bundleRelease`\n\nThe output will be `.aab` file instead of `.apk` file.\n\nNote that the `.aab` file will not have any significant file size changes compared to the `.apk` file.\n\nThe reduction in size will only be visible after uploaded the `.aab` file to Play Store.\n\n<br />\n\n#### 2. Separate Build by CPU Architecture\n\nIn your project's `android/app/build.gradle` file.\n\nUpdate the following setting.\n\n`def enableSeparateBuildPerCPUArchitecture = true`\n\n```\nsplits {\n    abi {\n        ...\n        enable enableSeparateBuildPerCPUArchitecture // be sure to enable here as well\n        ...\n    }\n}\n```\n\nContinue to build the apk as usual.\n\nThe output will be multiple `.apk` files (usually 4).\n\nEach of the `.apk` file will have significant reduction in app size.\n\nUpload all of them to the Play Store for submission.\n\nWorth to note that, the universal '.apk' file will not be built.\n\n(The one that support all architecture, thus the heavy size.)\n\nIf you want it to be in the output apk, along with the others, change the following setting.\n\n```\nsplits {\n    abi {\n        ...\n        enable enableSeparateBuildPerCPUArchitecture\n        universalApk true  // If true, also generate a universal APK\n        ...\n    }\n}\n```\n\nThen you will have 5 `.apk` files in the output folder.\n\nRead about why enabling the `universalApk` below.\n\n<br />\n\n---\n\n<br />\n\n#### Which one to use\n\nFor most of us, switching to use Android App Bundle (aab) is painless.\n\nThus, recommended to use it.\n\nHowever, here's are some of the things to consider.\n\n<br />\n\n##### 1. Firebase App Distribution does not support (.aab) at the moment.\n\nIf you use Firebase for internal distribution, you might want to use `Separate Build by CPU Architecture` approach, together with `universalApk` enabled.\n\nWhat you can do is, use universal apk file for distribution, and the separated `.apk` files for Play Store submission.\n\nSo, what about if you are using `.aab` file? How can you distribute the app for internal testing?\n\nWell, if there are no existing tools that are already integrated into the app, and need to cater for it,\nthen you might want to consider using Play Store's distribution track.\n\nYou can setup automated process to upload the `.aab` file after building it to the Play Store track.\n\nThis require owner access though.\n\n<br />\n\n##### 2. The reduction in size for both approaches are almost identical.\n\nFrom what I can tell, after experimenting with both approaches, and using both ways for different apps, in production.\n\nThe size reduction benefit is almost identical. In both cases, I got more than 50% in size reduction.\n\nSo the size reduction is not much of a deciding factor. Which makes us move to the next point.\n\n<br />\n\n##### 3. Concern on Android App Bundle's capabilities.\n\nFor most of the app out there, App Bundle offer hassle-free switch.\n\nWhile some of the use cases, it might be more complicated to maintain.\n\nIf you are not sure, refer to official documentation of Android development.\n\nIf you are not convinced, your app doesn't have defined scope and complexity, or your app might\ngrow to eventually having very complicated/advanced use cases, you can stick to separated '.apk' approach.\n\nOtherwise, using `.aab` is recommended.\n\nWell this post is not going to elaborate the differences of '.apk' and '.aab', but it is worth doing your research about the topic.\n\n<br />\n\n---\n\n<br />\n\n#### Conclusion\n\nWith that said, you will have your Android app with very much reduced size by now!\n\nFor my apps, over 50% in reduction.\n\nCheers!\n\nand\n\nHappy coding!\n","frontmatter":{"path":"/blog/reduce-your-react-native-android-app-size","date":"2020-07-19T13:11:00.962Z","title":"Reduce your react-native android app size","excerpt":"By 55% with android app bundle (.aab)","tags":["react-native"]},"fullPath":"/Users/chinloong/makespace/chinloongtan-web/src/content/blog/2020/07/19-android-bundle/index.md","timeToRead":4}},"__N_SSG":true}