{"version":3,"sources":["webpack:///path---blog-docker-dev-mode-098c1c260d58f4d2c3df.js","webpack:///./.cache/json/blog-docker-dev-mode.json"],"names":["webpackJsonp","479","module","exports","data","markdownRemark","html","frontmatter","date","path","title","excerpt","tags","pathContext"],"mappings":"AAAAA,cAAc,iBAERC,IACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,gBAAkBC,KAAA,q5BAAAC,aAA26BC,KAAA,iBAAAC,KAAA,wBAAAC,MAAA,0BAAAC,QAAA,mCAAAC,MAAA,aAA0JC","file":"path---blog-docker-dev-mode-098c1c260d58f4d2c3df.js","sourcesContent":["webpackJsonp([100428996489204],{\n\n/***/ 479:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"markdownRemark\":{\"html\":\"<p>Docker is helpful in a lot of ways.</p>\\n<p>Today, after dockerizing an application's services into different containers,\\nI ran into situation where I need to make changes to the code of one of the container that serves API.</p>\\n<p>Well, docker dev mode is not really a thing/command that available out of the box.\\nThough there are different ways to do it, I eventually did it with <code>volumes</code>.</p>\\n<pre><code>volumes:\\n  - /Users/yourDir/yourAwesomeApp:/var/www/yourAwesomeApp\\n</code></pre>\\n<p>It is a concept of docker which let you <code>mount</code> a host to your container.</p>\\n<p>Any changes you made to your host machine will be reflected in the container, without the need to stop and compose the services again.</p>\\n<p>I will be sure to explore this topic deeper in the future.</p>\\n<p>Visit my blog again in the future if you want to know more about my exploration with docker :)</p>\",\"frontmatter\":{\"date\":\"April 12, 2018\",\"path\":\"/blog/docker-dev-mode\",\"title\":\"Docker development mode\",\"excerpt\":\"Making code changes in container\",\"tags\":[\"docker\"]}}},\"pathContext\":{}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---blog-docker-dev-mode-098c1c260d58f4d2c3df.js","module.exports = {\"data\":{\"markdownRemark\":{\"html\":\"<p>Docker is helpful in a lot of ways.</p>\\n<p>Today, after dockerizing an application's services into different containers,\\nI ran into situation where I need to make changes to the code of one of the container that serves API.</p>\\n<p>Well, docker dev mode is not really a thing/command that available out of the box.\\nThough there are different ways to do it, I eventually did it with <code>volumes</code>.</p>\\n<pre><code>volumes:\\n  - /Users/yourDir/yourAwesomeApp:/var/www/yourAwesomeApp\\n</code></pre>\\n<p>It is a concept of docker which let you <code>mount</code> a host to your container.</p>\\n<p>Any changes you made to your host machine will be reflected in the container, without the need to stop and compose the services again.</p>\\n<p>I will be sure to explore this topic deeper in the future.</p>\\n<p>Visit my blog again in the future if you want to know more about my exploration with docker :)</p>\",\"frontmatter\":{\"date\":\"April 12, 2018\",\"path\":\"/blog/docker-dev-mode\",\"title\":\"Docker development mode\",\"excerpt\":\"Making code changes in container\",\"tags\":[\"docker\"]}}},\"pathContext\":{}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/blog-docker-dev-mode.json\n// module id = 479\n// module chunks = 100428996489204"],"sourceRoot":""}