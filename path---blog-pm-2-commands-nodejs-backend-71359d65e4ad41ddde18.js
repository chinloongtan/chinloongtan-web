webpackJsonp([58713220189260],{509:function(e,n){e.exports={data:{markdownRemark:{html:"<p>PM2 is a very handy tool to keep your node.js application online. Here's a list of commands that are essential for deployment.</p>\n<h4>Commands</h4>\n<ol>\n<li><code>pm2 start --name=web yarn --start</code> or <code>pm2 start --name=web --interpreter=bash yarn -- start</code></li>\n</ol>\n<p>Start your application using <code>yarn start</code> with <code>pm2</code> and assign a name <code>web</code> to the application.\n<code>--name</code> is useful for multiple applications in the same server. For example, backend server and web applications.</p>\n<p><code>--interpreter=bash</code> if your terminal should run with bash.</p>\n<br />\n<ol start=\"2\">\n<li><code>pm2 delete web</code> or <code>pm2 delete all</code></li>\n</ol>\n<p>Remove the process that is running the <code>web</code> application, if you assign a name previously. Or otherwise, delete with process id is possible as well.</p>\n<br />\n<ol start=\"3\">\n<li><code>pm2 list</code> or <code>pm2 status</code></li>\n</ol>\n<p>Show list of running processes managed by <code>pm2</code>.</p>\n<br />\n<ol start=\"4\">\n<li><code>pm2 logs</code> or <code>pm2 logs web</code></li>\n</ol>\n<p>Retrieve logs of running processes.</p>\n<br />\n<ol start=\"5\">\n<li><code>pm2 flush</code></li>\n</ol>\n<p>Remove currently logged output in log files.</p>\n<br />\n<h4>Config file</h4>\n<p>If you have multiple applications to manage, it is recommended to use pm2 config file to manage the config of each application.</p>\n<p>In parent directory:</p>\n<p>Run <code>pm2 ecosystem</code></p>\n<p>to create a config file, Ecosystem File.</p>\n<p>A <code>ecosystem.config.js</code> file will be generated.</p>\n<p>Here's a sample config file I used for my side project.</p>\n<pre><code>module.exports = {\n  apps: [\n    {\n      name: 'web',\n      script: 'yarn',\n      args: 'start',\n      cwd: './myproject-web',\n      interpreter: 'bash',\n      instances: 1,\n      env_production: {\n        NODE_ENV: 'production',\n        PORT: 3000,\n      },\n    },\n    {\n      name: 'api',\n      script: 'yarn',\n      args: 'start',\n      cwd: './myproject-backend',\n      interpreter: 'bash',\n      instances: 1,\n      env_production: {\n        NODE_ENV: 'production',\n        PORT: 5000,\n      },\n    }\n  ],\n};\n</code></pre>\n<p>That's all! Hope it helps.</p>\n<p>Cheers.</p>",frontmatter:{date:"January 10, 2022",path:"/blog/pm2-commands-nodejs-backend",title:"PM2 commands for your node.js backend",excerpt:"Essentials for deployment",tags:["node.js"]}}},pathContext:{}}}});
//# sourceMappingURL=path---blog-pm-2-commands-nodejs-backend-71359d65e4ad41ddde18.js.map