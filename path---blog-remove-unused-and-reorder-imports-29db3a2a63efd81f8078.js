webpackJsonp([0x83d2c9210358],{511:function(e,t){e.exports={data:{markdownRemark:{html:'<p>Today, I revisited the react-native project that was developed and published by me earlier and the first thing I did was to run tests because I intended to add more Typescript support to the project, wanted to know the current state of test suites of the project.</p>\n<p>It wasn\'t the best FIRST task as a start, but in my opinion, adding more Typescript will be benefiting over the long run.</p>\n<p>I\'ve identified removing unused imports to be the low hanging fruit to fix the <code>tsc</code> errors.</p>\n<p>I started with <a href="https://www.npmjs.com/package/eslint-plugin-unused-imports">https://www.npmjs.com/package/eslint-plugin-unused-imports</a> but turned out it also removes custom Types import that was used in my files.</p>\n<p>Then I found out that VS Code can achieve that with organize import feature.</p>\n<pre><code>"editor.formatOnSave": true,\n"[typescript]": {\n    "editor.codeActionsOnSave": {\n        "source.organizeImports": true\n    }\n}\n</code></pre>\n<p>That works also with <code>Shift</code> + <code>Option</code> + <code>o</code> shortcut. However, that will also reorder the imports alphabetically.\nIt seems like there is no way to only remove unused imports without reorder them with <code>organizeImports</code>, that being one issue.\nThe second issue is that I need to also press the shortcut keys for every files. Which is very repetitive work, because there are 1105 files in my <code>/src</code> directory.</p>\n<pre><code>$ find src -type f | wc -l\n  1105\n</code></pre>\n<p>The second issue was resolved with a VS Code extension to run <code>organizeImports</code> in a folder.</p>\n<p><a href="https://marketplace.visualstudio.com/items?itemName=bierner.folder-source-actions">https://marketplace.visualstudio.com/items?itemName=bierner.folder-source-actions</a></p>\n<p>Then to reorder the imports to my desired orders, I found this great article <a href="https://dev.to/otamnitram/sorting-your-imports-correctly-in-react-213m">https://dev.to/otamnitram/sorting-your-imports-correctly-in-react-213m</a> that does that.</p>\n<p>This is my config</p>\n<pre><code>"import/order": [\n  "error",\n  {\n    "groups": [ "builtin", "external", "internal", ["parent", "sibling"] ],\n    "pathGroups": [\n      {\n        "pattern": "react+(|-*)",\n        "group": "external",\n        "position": "before"\n      },\n      {\n        "pattern": "@**+(/**)",\n        "group": "internal",\n        "position": "before"\n      }\n    ],\n    "pathGroupsExcludedImportTypes": ["react"],\n    "newlines-between": "always",\n    "alphabetize": {\n      "order": "asc",\n      "caseInsensitive": true\n    }\n  }\n],\n</code></pre>\n<p>Just a TIL from me. That\'s it! Hope it helps.</p>\n<p>Cheers.</p>',frontmatter:{date:"January 21, 2022",path:"/blog/remove-unused-and-reorder-imports",title:"Remove unused and reorder imports",excerpt:"With ESLint and VS Code",tags:["react-native","typescript"]}}},pathContext:{}}}});
//# sourceMappingURL=path---blog-remove-unused-and-reorder-imports-29db3a2a63efd81f8078.js.map